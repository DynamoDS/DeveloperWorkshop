{
  "Uuid": "782311a2-752d-4924-b43d-2c102453851e",
  "IsCustomNode": false,
  "Description": null,
  "Name": "AU2019_BIM-Managers_DynamoAnalyticsPythonNode",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "\"\"\"\r\nDynamo graph check and usage tracking.\r\n\"\"\"\r\n\r\n__author__ = 'Dynamo BIM Managers: AU 2019'\r\n__version__ = '1.0'\r\n\r\n\r\nimport clr\r\nimport sys\r\nsys.path.append(r'C:\\Program Files (x86)\\IronPython 2.7\\Lib')\r\nimport System\r\nfrom System import Environment\r\nfrom System.IO import *\r\nimport os\r\nimport csv\r\n\r\n\"\"\"\r\n# Old way (Revit 2019 and down) to access the Dynamo DLLs\r\ndynamoAPIFolder = Directory.CreateDirectory(r'C:\\Program Files\\Dynamo\\Dynamo Core')\r\nlatest = sorted([s.Name for s in dynamoAPIFolder.GetDirectories()])[-1]\r\nclr.AddReferenceToFileAndPath(Path.Combine(dynamoAPIFolder.FullName, latest, 'DynamoCore.dll'))\r\nclr.AddReferenceToFileAndPath(Path.Combine(dynamoAPIFolder.FullName, latest, 'DynamoCoreWpf.dll'))\r\n\"\"\"\r\n\r\n# New way to access Dynamo DLLs as Revit now incorporates Dynamo as a feature\r\nsys.path.append(r'C:\\Program Files\\Autodesk\\Revit 2020\\AddIns\\DynamoForRevit')\r\nsys.path.append(r'C:\\Program Files\\Autodesk\\Revit 2020\\AddIns\\DynamoForRevit\\Revit')\r\n\t\r\nclr.AddReference('DynamoCore.dll')\r\nclr.AddReference('DynamoCoreWpf.dll')\r\nclr.AddReference('DynamoRevitDS.dll')\r\n\r\nfrom Dynamo.ViewModels import *\r\nfrom Dynamo.Models import *\r\nfrom Dynamo.Graph.Workspaces import *\r\n\r\ntry:\r\n\t\r\n\tclr.AddReference(\"RevitServices\")\r\n\timport RevitServices\r\n\tfrom RevitServices.Persistence import DocumentManager\r\n\t\r\n\tdoc = DocumentManager.Instance.CurrentDBDocument\r\n\tuiapp = DocumentManager.Instance.CurrentUIApplication\r\n\trevitApp = uiapp.Application\r\n\t\r\n\tclr.AddReference(\"RevitAPI\")\r\n\timport Autodesk\r\n\tfrom Autodesk.Revit.DB import *\r\n\t\r\n\tif doc.IsWorkshared:\r\n\t    revitDoc = ModelPathUtils.ConvertModelPathToUserVisiblePath(doc.GetWorksharingCentralModelPath())\r\n\telse:\r\n\t    revitDoc = DocumentManager.Instance.CurrentDBDocument.PathName\r\n\t\r\n\tif len(revitDoc) == 0:\r\n\t    revitDoc = 'None'\r\n\t\r\n\tversion = doc.Application.VersionNumber\r\n\t\r\n\tfrom Dynamo.Applications import *\r\n\tapp = DynamoRevit()\r\n\tmodel = app.RevitDynamoModel\r\n\tws = model.CurrentWorkspace\r\n\tdynpath = ws.FileName # Gets the Dynamo File Path\r\n\tdynname = Path.GetFileName(dynpath) # Gets the Dynamo File Name\r\n\t\r\n\tnodeCount = len(ws.Nodes)  # Counts the total amount of Nodes in the Workspace\r\n\twireCount = len(list(ws.Connectors))  # Counts the total amount of Wires in the Workspace\r\n\tlastSave = ws.LastSaved  # Get's the time and date of last Graph Save\r\n\tnotes = list(ws.Notes)  # Captures the Workspace Note objects and casts to a list\r\n\t\r\n\tnotesList,catchList = [],[]\r\n\tfor line in notes:\r\n\t\tcatchList.append(line.Text) # Get's the Text content of each Note\r\n\r\n\tkeys = [\"OFFICE: \", \"AUTHOR NAME: \", \"AUTHOR EMAIL: \", \"TESTED ON: \", \"RATING: \", \"KEYWORDS: \"] # Template data to export\r\n\r\n\tfor k in keys:  # Captures only the relevant Note Data based around a colon split\r\n\t\tfor n in catchList:\r\n\t\t\tif k in n:\r\n\t\t\t\tnotesList.append(n.split(':')[-1])\r\n\t\t\telse:\r\n\t\t\t\tpass\r\n\t\t\t\t\r\n\tdataOffice = notesList[0]\r\n\tdataAuthorName = notesList[1]\r\n\tdataAuthorEmail = notesList[2]\r\n\tdataTestedOn = notesList[3]\r\n\tdataRating = notesList[4]\r\n\tdataKeywords = notesList[5]\r\n\t\r\n\tappName = revitApp.VersionName # Gets the Revit Version \r\n\tappNumber = revitApp.VersionNumber # Gets the Revit Version Number\r\n\tappBuild = revitApp.VersionBuild # Gets the Revit Version Build\r\n\tappLanguage = str(revitApp.Language) # Gets the Revit Language\r\n\t\r\n\t# Getting Physical Memory (RAM) of Machine\r\n\tprocess = os.popen('wmic memorychip get capacity')\r\n\tresult = process.read()\r\n\tprocess.close()\r\n\ttotalMem = 0\r\n\t\r\n\tfor m in result.split(\" \\r\\n\")[1:-1]:\r\n\t    totalMem += int(m)\r\n\t\r\n\tmachineRam = totalMem / (1024**3) # Gets the Machines Ram\r\n\t\r\n\t# Machine data\r\n\tuserName = Environment.UserName # Gets the Username\r\n\tmachineName = Environment.MachineName # Gets the Machines Name\r\n\tmachineOS = Environment.OSVersion # Gets the OS Version\r\n\tmachineProcessor = Environment.ProcessorCount # Gets the Machines Processor Count\r\n\tmachineVersion = Environment.Version # Gets the Machines Version\r\n\t\r\n\tsummary = {\r\n\t\t\t\t\"Machine\" :\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\"Username\" : userName,\r\n\t\t\t\t\t\"Name\" : machineName,\r\n\t\t\t\t\t\"OS\" : machineOS,\r\n\t\t\t\t\t\"Processor Count\" : machineProcessor,\r\n\t\t\t\t\t\"Version\" : machineVersion,\r\n\t\t\t\t\t\"RAM\" : machineRam\r\n\t\t\t\t\t},\r\n\t\t\t\t\"Dynamo\" :\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\"Path\" : dynpath,\r\n\t\t\t\t\t\"Name\" : dynname,\r\n\t\t\t\t\t\"Node Count\" : nodeCount,\r\n\t\t\t\t\t\"Wire Count\" : wireCount,\r\n\t\t\t\t\t\"Last Saved\" : lastSave\r\n\t\t\t\t\t},\r\n\t\t\t\t\"Revit\" :\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\"Version Name\" : appName,\r\n\t\t\t\t\t\"Version Number\" : appNumber,\r\n\t\t\t\t\t\"Version Build\" : appBuild,\r\n\t\t\t\t\t\"Language\" : appLanguage,\r\n\t\t\t\t\t\"Revit Document\" : revitDoc\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\nexcept Exception as ex:\r\n    summary = ex.message\r\n\r\n###############################################################################################################################\r\n########### \t\t\tCHANGE THE FILE PATH AND FILE NAME TO THE SHARED LOCATION \t\t\t\t###############################\r\n###############################################################################################################################\r\ntracker = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), 'DynamoTracker_' + userName + '.csv')\r\n\r\ntrace = [userName, machineName, machineOS, machineProcessor, machineRam,\r\n         machineVersion, appName, appNumber, appBuild, appLanguage, revitDoc, \r\n         dynname, dynpath, lastSave, nodeCount, wireCount, dataOffice, \r\n         dataAuthorName, dataAuthorEmail, dataTestedOn, dataRating, dataKeywords]\r\n\r\nheaders = ['User: Username', 'Machine: Name', 'Machine: Operating System', 'Machine: Processor', \r\n\t\t\t'Machine: RAM', 'Machine: Version','Application: Name', 'Application: Version', \r\n\t\t\t'Application: Build Number', 'Application: Language', 'Application: Document Path', \r\n\t\t\t'Graph: Name', 'Graph: Path', 'Graph: Last Saved', 'Graph: Node Count', \r\n\t\t\t'Graph: Wire Count', 'Info: Office', 'Info: Author Name', 'Info: Author Email', \r\n\t\t\t'Info: Tested On', 'Info: Rating', 'Info: Keywords']\r\n\r\nif os.path.isfile(tracker):\r\n    with open(tracker, 'ab') as f:\r\n        writer = csv.writer(f, dialect='excel')\r\n        writer.writerow(trace)\r\nelse:\r\n    with open(tracker, 'ab') as f:\r\n        writer = csv.writer(f, dialect='excel')\r\n        writer.writerow(headers)\r\n        writer.writerow(trace)\r\ntrace = []\r\n\r\nOUT = summary",
      "VariableInputPorts": true,
      "Id": "c485725e25c74e07a2d0501e6eed2d96",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9d19839473bc45caabeffe3408ca4062",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nsys.path.append(r'Y:\\OneDrive - autodesk\\01 AEC Generative\\Dynamo\\AU 2019')\r\n\r\n# Importing our external Python module\r\nimport dynamoAnalytics\r\n\r\n# Sending out a Summary to the Dynamo Document\r\nOUT = dynamoAnalytics.summary\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "4b5793b4fb5f4e29a8b45bd7496ba837",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9c19634c261c46ffbd4cf6e8d20edc39",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "\"\"\"\nDynamo graph check and usage tracking.\n\"\"\"\n\n__author__ = 'Dynamo BIM Managers: AU 2019'\n__version__ = '1.0'\n\n\nimport clr\nimport sys\nsys.path.append(r'C:\\Program Files (x86)\\IronPython 2.7\\Lib')\nimport System\nfrom System import Environment\nfrom System.IO import *\nimport os\nimport csv\n\n\"\"\"\n# Old way (Revit 2019 and down) to access the Dynamo DLLs\ndynamoAPIFolder = Directory.CreateDirectory(r'C:\\Program Files\\Dynamo\\Dynamo Core')\nlatest = sorted([s.Name for s in dynamoAPIFolder.GetDirectories()])[-1]\nclr.AddReferenceToFileAndPath(Path.Combine(dynamoAPIFolder.FullName, latest, 'DynamoCore.dll'))\nclr.AddReferenceToFileAndPath(Path.Combine(dynamoAPIFolder.FullName, latest, 'DynamoCoreWpf.dll'))\n\"\"\"\n\n# New way to access Dynamo DLLs as Revit now incorporates Dynamo as a feature\nsys.path.append(r'C:\\Program Files\\Autodesk\\Revit 2020\\AddIns\\DynamoForRevit')\nsys.path.append(r'C:\\Program Files\\Autodesk\\Revit 2020\\AddIns\\DynamoForRevit\\Revit')\n    \nclr.AddReference('DynamoCore.dll')\nclr.AddReference('DynamoCoreWpf.dll')\nclr.AddReference('DynamoRevitDS.dll')\n\nfrom Dynamo.ViewModels import *\nfrom Dynamo.Models import *\nfrom Dynamo.Graph.Workspaces import *\n\ntry:\n    \n    clr.AddReference(\"RevitServices\")\n    import RevitServices\n    from RevitServices.Persistence import DocumentManager\n    \n    doc = DocumentManager.Instance.CurrentDBDocument\n    uiapp = DocumentManager.Instance.CurrentUIApplication\n    revitApp = uiapp.Application\n    \n    clr.AddReference(\"RevitAPI\")\n    import Autodesk\n    from Autodesk.Revit.DB import *\n    \n    if doc.IsWorkshared:\n        revitDoc = ModelPathUtils.ConvertModelPathToUserVisiblePath(doc.GetWorksharingCentralModelPath())\n    else:\n        revitDoc = DocumentManager.Instance.CurrentDBDocument.PathName\n    \n    if len(revitDoc) == 0:\n        revitDoc = 'None'\n    \n    version = doc.Application.VersionNumber\n    \n    from Dynamo.Applications import *\n    app = DynamoRevit()\n    model = app.RevitDynamoModel\n    ws = model.CurrentWorkspace\n    dynpath = ws.FileName # Gets the Dynamo File Path\n    dynname = Path.GetFileName(dynpath) # Gets the Dynamo File Name\n    \n    nodeCount = len(ws.Nodes)  # Counts the total amount of Nodes in the Workspace\n    wireCount = len(list(ws.Connectors))  # Counts the total amount of Wires in the Workspace\n    lastSave = ws.LastSaved  # Get's the time and date of last Graph Save\n    notes = list(ws.Notes)  # Captures the Workspace Note objects and casts to a list\n    \n    notesList,catchList = [],[]\n    for line in notes:\n        catchList.append(line.Text) # Get's the Text content of each Note\n\n    keys = [\"OFFICE: \", \"AUTHOR NAME: \", \"AUTHOR EMAIL: \", \"TESTED ON: \", \"RATING: \", \"KEYWORDS: \"] # Template data to export\n\n    for k in keys:  # Captures only the relevant Note Data based around a colon split\n        for n in catchList:\n            if k in n:\n                notesList.append(n.split(':')[-1])\n            else:\n                pass\n                \n    dataOffice = notesList[0]\n    dataAuthorName = notesList[1]\n    dataAuthorEmail = notesList[2]\n    dataTestedOn = notesList[3]\n    dataRating = notesList[4]\n    dataKeywords = notesList[5]\n    \n    appName = revitApp.VersionName # Gets the Revit Version \n    appNumber = revitApp.VersionNumber # Gets the Revit Version Number\n    appBuild = revitApp.VersionBuild # Gets the Revit Version Build\n    appLanguage = str(revitApp.Language) # Gets the Revit Language\n    \n    # Getting Physical Memory (RAM) of Machine\n    process = os.popen('wmic memorychip get capacity')\n    result = process.read()\n    process.close()\n    totalMem = 0\n    \n    for m in result.split(\" \\r\\n\")[1:-1]:\n        totalMem += int(m)\n    \n    machineRam = totalMem / (1024**3) # Gets the Machines Ram\n    \n    # Machine data\n    userName = Environment.UserName # Gets the Username\n    machineName = Environment.MachineName # Gets the Machines Name\n    machineOS = Environment.OSVersion # Gets the OS Version\n    machineProcessor = Environment.ProcessorCount # Gets the Machines Processor Count\n    machineVersion = Environment.Version # Gets the Machines Version\n    \n\n    summary = {\n                \"Machine\" :\n                    {\n                    \"Username\" : userName,\n                    \"Name\" : machineName,\n                    \"OS\" : machineOS,\n                    \"Processor Count\" : machineProcessor,\n                    \"Version\" : machineVersion,\n                    \"RAM\" : machineRam\n                    },\n                \"Dynamo\" :\n                    {\n                    \"Path\" : dynpath,\n                    \"Name\" : dynname,\n                    \"Node Count\" : nodeCount,\n                    \"Wire Count\" : wireCount,\n                    \"Last Saved\" : lastSave\n                    },\n                \"Revit\" :\n                    {\n                    \"Version Name\" : appName,\n                    \"Version Number\" : appNumber,\n                    \"Version Build\" : appBuild,\n                    \"Language\" : appLanguage,\n                    \"Revit Document\" : revitDoc\n                    },\n                \"Graph Notes\" :\n                    {\n                    \"Office\" : dataOffice,\n                    \"Author Name\" : dataAuthorName,\n                    \"Author Email\" : dataAuthorEmail,\n                    \"Last Tested On\" : dataTestedOn,\n                    \"Rating\" : dataRating,\n                    \"Keywords\" : dataKeywords\n                    }\n                }\n\nexcept Exception as ex:\n    summary = ex.message\n\n###############################################################################################################################\n###########             CHANGE THE FILE PATH AND FILE NAME TO THE SHARED LOCATION               ###############################\n###############################################################################################################################\ntracker = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), 'DynamoTracker_' + userName + '.csv')\n\ntrace = [userName, machineName, machineOS, machineProcessor, machineRam,\n         machineVersion, appName, appNumber, appBuild, appLanguage, revitDoc, \n         dynname, dynpath, lastSave, nodeCount, wireCount, dataOffice, \n         dataAuthorName, dataAuthorEmail, dataTestedOn, dataRating, dataKeywords]\n\nheaders = ['User: Username', 'Machine: Name', 'Machine: Operating System', 'Machine: Processor', \n            'Machine: RAM', 'Machine: Version','Application: Name', 'Application: Version', \n            'Application: Build Number', 'Application: Language', 'Application: Document Path', \n            'Graph: Name', 'Graph: Path', 'Graph: Last Saved', 'Graph: Node Count', \n            'Graph: Wire Count', 'Info: Office', 'Info: Author Name', 'Info: Author Email', \n            'Info: Tested On', 'Info: Rating', 'Info: Keywords']\n\nif os.path.isfile(tracker):\n    with open(tracker, 'ab') as f:\n        writer = csv.writer(f, dialect='excel')\n        writer.writerow(trace)\nelse:\n    with open(tracker, 'ab') as f:\n        writer = csv.writer(f, dialect='excel')\n        writer.writerow(headers)\n        writer.writerow(trace)\ntrace = []\n\nOUT = summary",
      "VariableInputPorts": true,
      "Id": "0131ca9af8984aa092d08eb4816e5d66",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2ef790d0b3844805be4a7c2cba485c95",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    }
  ],
  "Connectors": [],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.2.1.5175",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -5.5984228975631808E+17,
      "EyeY": 6.06495813902678E+17,
      "EyeZ": 2.7059044004888694E+18,
      "LookX": 5.5984228975631808E+17,
      "LookY": -6.06495813902678E+17,
      "LookZ": -2.7059044004888694E+18,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script : InGraph",
        "Id": "c485725e25c74e07a2d0501e6eed2d96",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 1223.982030378625,
        "Y": -261.17939487789937
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script : External",
        "Id": "4b5793b4fb5f4e29a8b45bd7496ba837",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 1222.9786088239753,
        "Y": 163.41478412425386
      },
      {
        "ShowGeometry": true,
        "Name": "Dynamo Analytics",
        "Id": "0131ca9af8984aa092d08eb4816e5d66",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1548.1698071820902,
        "Y": 38.091984087612218
      }
    ],
    "Annotations": [
      {
        "Id": "d6006c6f597a46529019076c6b5415a2",
        "Title": "In-Graph Tracker",
        "Nodes": [
          "c485725e25c74e07a2d0501e6eed2d96",
          "ce78d046fe0144d2b79aa708dd9beab3"
        ],
        "Left": 824.895405535839,
        "Top": -314.17939487789937,
        "Width": 564.086624842786,
        "Height": 406.78506486034939,
        "FontSize": 36.0,
        "InitialTop": -261.17939487789937,
        "InitialHeight": 146.78506486034939,
        "TextblockHeight": 43.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "e79cc6cbf3e641d787556fa8d7363fdd",
        "Title": "External Python Tracker",
        "Nodes": [
          "4b5793b4fb5f4e29a8b45bd7496ba837",
          "c7db4ab8377b4a7b974140540ca62e6a"
        ],
        "Left": 824.76073968187882,
        "Top": 110.41478412425386,
        "Width": 564.21786914209645,
        "Height": 348.78506486034939,
        "FontSize": 36.0,
        "InitialTop": 163.41478412425386,
        "InitialHeight": 146.78506486034939,
        "TextblockHeight": 43.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "519dc7fef5da4fdc9001cfe2b4811284",
        "Title": "FUNCTION",
        "Nodes": [
          "b1ea3a1626d845569ac47d0872f1ef55"
        ],
        "Left": 1865.02980385558,
        "Top": 1.9132439771511542,
        "Width": 243.0,
        "Height": 97.0,
        "FontSize": 36.0,
        "InitialTop": 54.913243977151154,
        "InitialHeight": 140.0,
        "TextblockHeight": 43.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "4c12846c7f9e49c7802b05cb538b1e00",
        "Title": "LANDING PAGE",
        "Nodes": [
          "0131ca9af8984aa092d08eb4816e5d66",
          "b0508515706f481a88f095b3e69c97b2",
          "7fd080a03cf344c6a548ee6d126f20a4",
          "4ee1a2a80ac24b62b3086a3672b0d581",
          "4467b9d447bb43a78b7b8dac6a45fec1",
          "da5be3090a8d41fba2ae52aa9e9bd63f",
          "730548f0f02a4e25b7b23ce2c70ca614",
          "5a2f066b71014bbe88ec00a5ddc55371"
        ],
        "Left": 1538.1698071820902,
        "Top": -433.79905638723437,
        "Width": 310.0,
        "Height": 564.89104047484659,
        "FontSize": 48.0,
        "InitialTop": -308.79905638723437,
        "InitialHeight": 487.187183038243,
        "TextblockHeight": 115.0,
        "Background": "#FFFFFFFF"
      },
      {
        "Id": "e26eba53a0e443bf9761f673448ebf13",
        "Title": "OUTPUT",
        "Nodes": [
          "f44c1c0d2a5b4b12b71c7b091936d0b5"
        ],
        "Left": 1865.02980385558,
        "Top": -107.40402681334488,
        "Width": 235.0,
        "Height": 97.0,
        "FontSize": 36.0,
        "InitialTop": -54.404026813344885,
        "InitialHeight": 140.0,
        "TextblockHeight": 43.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "bdf7b04f50aa4871888fda3556b81710",
        "Title": "SET",
        "Nodes": [
          "4e42926f9b3141bf80246c90cd25e3cd"
        ],
        "Left": 1865.02980385558,
        "Top": -326.03856839433695,
        "Width": 234.0,
        "Height": 97.0,
        "FontSize": 36.0,
        "InitialTop": -273.03856839433695,
        "InitialHeight": 140.0,
        "TextblockHeight": 43.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "9fba0d29165b4536a4fb1ff56eb52d14",
        "Title": "INPUT",
        "Nodes": [
          "7203a33ca845428d8e6d60b706299fd6"
        ],
        "Left": 1865.02980385558,
        "Top": -216.72129760384092,
        "Width": 184.0,
        "Height": 97.0,
        "FontSize": 36.0,
        "InitialTop": -163.72129760384092,
        "InitialHeight": 140.0,
        "TextblockHeight": 43.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "928f1cae41174c368f643bc25167c93c",
        "Title": "GET",
        "Nodes": [
          "29a1b7376e6947d8ac83d69f6a3314fa"
        ],
        "Left": 1865.02980385558,
        "Top": -435.355839184833,
        "Width": 250.0,
        "Height": 97.0,
        "FontSize": 36.0,
        "InitialTop": -382.355839184833,
        "InitialHeight": 140.0,
        "TextblockHeight": 43.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "f1e4848755b444dfae04872f366ab63e",
        "Title": "Options",
        "Nodes": [
          "c8491ed9a03f45f1a6892a53e89fa726",
          "e3491a8660384ab1836a47a9a726d9d4"
        ],
        "Left": 824.895405535839,
        "Top": -446.78329033392271,
        "Width": 564.086624842786,
        "Height": 116.44974929408943,
        "FontSize": 48.0,
        "InitialTop": -378.78329033392271,
        "InitialHeight": 144.44974929408943,
        "TextblockHeight": 58.0,
        "Background": "#FFFFFFFF"
      },
      {
        "Id": "ce78d046fe0144d2b79aa708dd9beab3",
        "Title": "This version of the Python based 'Dynamo Graph Analytics' node is in canvas.\r\n\r\n----------------------------------------------------------\r\n\r\nPros:\r\n1. Ships with every graph it's embedded into.\r\n2. Pushes out analytics to the desktop of the user (or any chosen file path)\r\n3. Instant feedback when making amendments to the Python node\r\n\r\n---------------------------------------------------------\r\n\r\nCons:\r\n1. Hard to maintain as you'll have to update every graph\r\n2. Can become misaligned with other graphs containing this node\r\n3. Updates will not roll out to every graph containing this node automatically. Bespoke updates have to be made",
        "Nodes": [],
        "Left": 834.895405535839,
        "Top": -254.39433001754998,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c7db4ab8377b4a7b974140540ca62e6a",
        "Title": "This version of the Python based 'Dynamo Graph Analytics' node is in canvas.\r\n\r\n----------------------------------------------------------\r\n\r\nPros:\r\n1. Ships with every graph it's embedded into.\r\n2. Pushes out analytics to a single centralized location of the BIM Managers choosing.\r\n3. Will update every single graph automatically when the single Python file is updated.\r\n\r\n---------------------------------------------------------\r\n\r\nCons:\r\n1. No instant feedback when making amendments.\r\n2. Requires ability to write Python external to Dynamo (i.e in Atom / Sublime)",
        "Nodes": [],
        "Left": 834.76073968187882,
        "Top": 170.19984898460325,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b1ea3a1626d845569ac47d0872f1ef55",
        "Title": "Data manipulation on dynamo objects",
        "Nodes": [],
        "Left": 1875.02980385558,
        "Top": 54.913243977151154,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f44c1c0d2a5b4b12b71c7b091936d0b5",
        "Title": "Object creation in Host | Final output",
        "Nodes": [],
        "Left": 1875.02980385558,
        "Top": -54.404026813344885,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4e42926f9b3141bf80246c90cd25e3cd",
        "Title": "Set parameter values of Host objects",
        "Nodes": [],
        "Left": 1875.02980385558,
        "Top": -273.03856839433695,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b0508515706f481a88f095b3e69c97b2",
        "Title": "This Python Script creates a CSV file to track the usage of the Dynamo file.",
        "Nodes": [],
        "Left": 1548.1698071820902,
        "Top": -27.315693708994786,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "29a1b7376e6947d8ac83d69f6a3314fa",
        "Title": "Get parameter values from Host objects",
        "Nodes": [],
        "Left": 1875.02980385558,
        "Top": -382.355839184833,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7203a33ca845428d8e6d60b706299fd6",
        "Title": "Data input and preparation",
        "Nodes": [],
        "Left": 1875.02980385558,
        "Top": -163.72129760384092,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "730548f0f02a4e25b7b23ce2c70ca614",
        "Title": "OFFICE: <Office>",
        "Nodes": [],
        "Left": 1548.1698071820902,
        "Top": -308.79905638723437,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5a2f066b71014bbe88ec00a5ddc55371",
        "Title": "AUTHOR NAME: <Author Name>",
        "Nodes": [],
        "Left": 1548.1698071820902,
        "Top": -261.88516260752777,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4ee1a2a80ac24b62b3086a3672b0d581",
        "Title": "AUTHOR EMAIL: <Author Email>",
        "Nodes": [],
        "Left": 1548.1698071820902,
        "Top": -214.97126882782118,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4467b9d447bb43a78b7b8dac6a45fec1",
        "Title": "TESTED ON: <Tested On>",
        "Nodes": [],
        "Left": 1548.1698071820902,
        "Top": -168.05737504811458,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "da5be3090a8d41fba2ae52aa9e9bd63f",
        "Title": "RATING: <Rating - i.e 1-5>",
        "Nodes": [],
        "Left": 1548.1698071820902,
        "Top": -121.14348126840798,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7fd080a03cf344c6a548ee6d126f20a4",
        "Title": "KEYWORDS: <Keyword 1, Keyword 2, Keywords N>",
        "Nodes": [],
        "Left": 1548.1698071820902,
        "Top": -74.229587488701384,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c8491ed9a03f45f1a6892a53e89fa726",
        "Title": " ",
        "Nodes": [],
        "Left": 834.895405535839,
        "Top": -378.78329033392271,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e3491a8660384ab1836a47a9a726d9d4",
        "Title": " ",
        "Nodes": [],
        "Left": 1328.982030378625,
        "Top": -374.33354103983328,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -391.92046116376707,
    "Y": 421.38689899675904,
    "Zoom": 0.82619522933933354
  }
}